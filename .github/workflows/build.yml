name: Build, Push to Docker Hub, and Deploy to Dokploy

on:
  push:
    branches: ["main"]

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/example:latest
          platforms: linux/amd64
          build-args: |
            PUBLIC_HELLO=world

  deploy-to-dokploy:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image

    steps:
      # Step 4: Deploy to Dokploy
      - name: Deploy to Dokploy
        env:
          DOKPLOY_API_KEY: ${{ secrets.DOKPLOY_API_KEY }}
        run: |
          curl -X POST "https://api.dokploy.com/deploy" \
          -H "Authorization: Bearer ${DOKPLOY_API_KEY}" \
          -H "Content-Type: application/json" \
          -d '{
                "name": "my-app", 
                "image": "${{ secrets.DOCKERHUB_USERNAME }}/example:latest",
                "port": 3000
              }'



# name: build + publish

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAME: ${{ github.repository }}

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     #if: contains(github.event.head_commit.message, 'web')

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Node.js 20
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20

#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v3

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

#       - name: Login to GHCR
#         uses: docker/login-action@v3
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Build and Push Docker Image
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           platforms: linux/amd64 #, linux/arm64 <-- Add for ARM support
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}
#           build-args: |
#             PUBLIC_HELLO=world

#       - name: Deploy on CapRover
#         uses: caprover/deploy-from-github@v1.1.2
#         with:
#           server: '${{ secrets.CAPROVER_SERVER }}'
#           app: '${{ secrets.APP_NAME }}'
#           token: '${{ secrets.APP_TOKEN }}'
#           image: 'ghcr.io/harshascode/mkvcinemas:main'
